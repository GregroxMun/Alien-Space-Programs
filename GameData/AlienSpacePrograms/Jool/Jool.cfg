@Kopernicus:HAS[!AlienSpaceProgramSettings]:FOR[JoolSpaceProgram]
{
	#@AlienSpaceProgramSettings {}
}
@Kopernicus:HAS[@AlienSpaceProgramSettings:HAS[#Homeworld[Jool]]]:FOR[JoolSpaceProgram]
{
	!Body[Jool]{}

	%Body[Bin] //Uninhabited Kerbin
	{
		identifier = AlienSpacePrograms/Bin
		cacheFile = AlienSpacePrograms/0Miscellany/Cache/WildKerbin.bin
		contractWeight = 30
		Debug
		{
			update = true
		}
		Template
		{
			name = Kerbin
			//Remove easter eggs, KSC and KSC2 (City), and ground stations (City2)
			//Later I'll try to keep City and just edit KSC and KSC2 to not be ground stations
			removePQSMods = PQSCity,PQSMod_MapDecal,PQSMod_MapDecalTangent,PQSCity2
		}
		Properties
		{
			isHomeWorld = False
			displayName = #autoLOC_910048 // Kerbin (Stock)
			description = #aspLOC_000023 //Bin is in many ways a hotter, more active version of Tylo, or perhaps Laythe's distant twin. It is the only object other than Laythe to have liquid water oceans coating its surface.
			ScienceValues
			{
				landedDataValue = 8.5
				splashedDataValue = 8.5
				flyingLowDataValue = 7.5
				flyingHighDataValue = 7
				inSpaceLowDataValue = 7
				inSpaceHighDataValue = 6
				recoveryValue = 6

				flyingAltitudeThreshold = 18000
				spaceAltitudeThreshold = 250000
			}
		}
		Orbit
		{
			referenceBody = Squad/Sun
		}
		ScaledVersion
		{

		}
		Atmosphere
		{

		}
		PQS
		{
			Mods
			{
				//Put the stock KSC peninsula back
				MapDecalTangent
				{
					absolute = True
					absoluteOffset = 0
					angle = 220
					cullBlack = False
					DEBUG_HighlightInclusion = False
					heightMap = BUILTIN/ksc_decal_heightMap
					heightMapDeformity = 70
					position = 157000,-3000,-570000
					removeScatter = True
					radius = 7500
					smoothColor = 0
					smoothHeight = 0
					useAlphaHeightSmoothing = True
					order = 99999
					enabled = True
					name = BinKSCPeninsula
				}
				//As long as we're looking at putting stock terrain back...
				MapDecalTangent
				{
					absolute = True
					absoluteOffset = -85
					angle = 110
					cullBlack = True
					DEBUG_HighlightInclusion = False
					heightMap = BUILTIN/island_runway_decal_heightmap
					heightMapDeformity = 200
					position = 186100,-15810,-570000
					removeScatter = True
					radius = 1200
					smoothColor = 0.125
					smoothHeight = 0.2
					useAlphaHeightSmoothing = True
					order = 9999
					enabled = True
					name = BinIslandAirfield
				}
				//Let's add back some Kerbin artifacts
				//I might be able to do all of them some day,
				//but until then we have these.
				//First monolith
				City
				{
					debugOrientated = False
					frameDelta = 1
					randomizeOnSphere = False
					reorientToSphere = True
					reorientFinalAngle = 15
					reorientInitialUp = 0,1,0
					repositionRadial = 126710,349600,-472140
					repositionRadiusOffset = 997.5
					repositionToSphere = True
					repositionToSphereSurface = True
					repositionToSphereSurfaceAddHeight = False
					commnetStation = False
					isKSC = False
					order = 100
					enabled = True
					name = Monolith00
					LOD
					{
						Value
						{
							visibleRange = 10000
							scale = 13,13,13
							model = BUILTIN/monolith00
							delete = False
						}
					}
				}
				//Second monolith
				City
				{
					debugOrientated = False
					frameDelta = 1
					randomizeOnSphere = False
					reorientToSphere = True
					reorientFinalAngle = -56
					reorientInitialUp = 0,1,0
					repositionRadial = 96716,-6735,-594956
					repositionRadiusOffset = 2803
					repositionToSphere = True
					repositionToSphereSurface = True
					repositionToSphereSurfaceAddHeight = False
					commnetStation = False
					isKSC = False
					order = 100
					enabled = True
					name = Monolith01
					LOD
					{
						Value
						{
							visibleRange = 10000
							scale = 13,13,13
							model = BUILTIN/monolith00
							delete = False
						}
					}
				}
				//Third monolith
				City
				{
					debugOrientated = False
					frameDelta = 1
					randomizeOnSphere = False
					reorientToSphere = True
					reorientFinalAngle = 45
					reorientInitialUp = 0,1,0
					repositionRadial = 513856,-290549,-122798
					repositionRadiusOffset = 2948.5
					repositionToSphere = True
					repositionToSphereSurface = True
					repositionToSphereSurfaceAddHeight = False
					commnetStation = False
					isKSC = False
					order = 100
					enabled = True
					name = Monolith02
					LOD
					{
						Value
						{
							visibleRange = 10000
							scale = 13,13,13
							model = BUILTIN/monolith00
							delete = False
						}
					}
				}
				//Random (green) monolith
				City
				{
					debugOrientated = False
					frameDelta = 1
					randomizeOnSphere = True
					reorientToSphere = True
					reorientFinalAngle = 21.95597
					reorientInitialUp = 0,1,0
					repositionRadial = 470014.844,-321799.219,-188497.484
					repositionRadiusOffset = 2948.5
					repositionToSphere = True
					repositionToSphereSurface = True
					repositionToSphereSurfaceAddHeight = False
					commnetStation = False
					isKSC = False
					order = 100
					enabled = True
					name = Randolith
					LOD
					{
						Value
						{
							visibleRange = 10000
							scale = 13,13,13
							model = BUILTIN/monolith01
							delete = False
						}
					}
				}
			}
		}
		Ocean
		{

		}
	}

	@Body[Mun]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Bin
		}
		@Properties
		{
			%description = #aspLOC_000010 //The Mun is a large satellite orbiting Bin. It is mostly gray in appearance, with craters of various sizes dotting its otherwise smooth surface. It was the first moon of another planet to be discovered due to its relatively large size. Sometimes, Mun can be seen as a separate point of light in the sky next to Bin.
			%displayName = #aspLOC_000011 //Mun
			@ScienceValues
			{
				landedDataValue = 8
				inSpaceLowDataValue = 7
				inSpaceHighDataValue = 5
				recoveryValue = 5
			}
		}
	}

	@Body[Minmus]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Bin
		}
		@Properties
		{
			%description = #aspLOC_000012 //Minmus is the smallest moon orbiting Bin. Due to the large amount of squinting and eye strain associated with its discovery, wearing glasses has become synonymous with being an accomplished astronomer.
			@ScienceValues
			{
				landedDataValue = 9
				inSpaceLowDataValue = 7
				inSpaceHighDataValue = 5
				recoveryValue = 6
			}
		}
	}

	@Body[Kerbin] //Homeworld Jool, had to template from Eve
	{
		%name = Kerbin
		%cbNameLater = Jool
		%identifier = AlienSpacePrograms/Jool
		%cacheFile = AlienSpacePrograms/0Miscellany/Cache/Joolkerbin.bin
		Debug
		{
			update = true
		}
		@Template
		{
			%name = Eve
			removePQSMods = PQSCity,PQSLandControl,PQSMod_QuadEnhanceCoast,PQSMod_VertexHeightMap,PQSMod_VertexHeightNoiseVertHeightCurve2,PQSMod_VertexRidgedAltitudeCurve,PQSMod_VertexSimplexHeightAbsolute
			removeOcean = True
		}
		!Ocean{}
		//I had to rebuild this one almost from scratch and I couldn't use the Kerbin template anyway.
		@Properties
		{
			description = #aspLOC_000024 //Jool is a unique world in the Kerbol System. It is the largest of the planets, only the Sun itself (small though it appears in the sky) answers to Jool's might. Jool is home to a wide variety of biodiversity, including the Hunters, Sinkers, Floaters, and of course the Kerbals. With seemingly just the right chemical makeup to make life impossible, it is only around the Pillars of Meander that any nutrients can be taken from the otherwise surfaceless giant planet. It is often said that he who can get their spacecraft into orbit around Jool is almost all the way to anywhere, by virtue of its three large moons.
			displayName = #autoLOC_910041 
			radius = 6000000
			geeASL = 0.800273295870079
			mass = 4.23321273059351E+24
			gravParameter = 282528004209995
			rotates = True
			rotationPeriod = 36000
			tidallyLocked = False
			initialRotation = 0
			inverseRotThresholdAltitude = 220000
			albedo = 0.52
			emissivity = 0.48
			coreTemperatureOffset = 80
			isHomeWorld = True
			timewarpAltitudeLimits = 0 200000 200000 200000 200000 300000 600000 1200000
			sphereOfInfluence = 2455985185.42347
			hillSphere = 4065824625.34358
			solarRotationPeriod = False
			navballSwitchRadiusMult = 0.06
			navballSwitchRadiusMultLow = 0.055
			nonExactThreshold = 0.05
			exactSearch = False
			useTheInName = False
			selectable = True
			RDVisibility = VISIBLE
			maxZoom = 60000
			@ScienceValues
			{
				landedDataValue = 30
				splashedDataValue = 1
				flyingLowDataValue = 12
				flyingHighDataValue = 9
				inSpaceLowDataValue = 7
				inSpaceHighDataValue = 6
				recoveryValue = 6
				flyingAltitudeThreshold = 120000
				spaceAltitudeThreshold = 4000000
			}
			//Added Jool biome map from KSPSnark, Jool Biomes
			//https://github.com/KSPSnark/JoolBiomes
			//MIT license
			//Otherwise, Jool was using the Kerbin biome map, which makes no sense.
			biomeMap = AlienSpacePrograms/Jool/PluginData/JoolBiome-GGS.png
			Biomes
			{
				Biome
				{
					name = EquatorialCloudBelt
					displayName = #aspLOC_000025 
					value = 1.0
					color = 1,0,0,1
				}
				Biome
				{
					name = TemperateCloudBelt
					displayName = #aspLOC_000026 
					value = 1.0
					color = 0.25,0.25,0.25,1
				}
				Biome
				{
					name = PolarCloudBelt
					displayName = #aspLOC_000027 
					value = 1.0
					color = 0,0,1,1
				}
				Biome
				{
					name = GreatGreenSpot
					displayName = #aspLOC_000028 
					value = 1.0
					color = 0,1,0,1
				}
			}
		}
		@Orbit
		{
			referenceBody = Squad/Sun
			inclination = 1.30400002002716
			eccentricity = 0.0500000007450581
			semiMajorAxis = 68773560320
			longitudeOfAscendingNode = 52
			argumentOfPeriapsis = 0
			meanAnomalyAtEpoch = 0.100000001490116
			meanAnomalyAtEpochD = 5.72957803668559
			epoch = 0
			color = 0.3294118,0.5215687,0.0745098,0.5019608
			nodeColor = 0.329411775,0.521568656,0.0745098069,0.501960814
		}
		@Atmosphere //Stock atmosphere as of KSP 1.6.1 via kittopia-dumps
		{
			//Fake static atmosphere for engine balancing
			staticPressureASL = 101.325
			enabled = True // Whether the body has an atmosphere.
			oxygen = False // Whether the atmosphere contains oxygen.
			staticDensityASL = 6.70262205528434 // Atmospherical density at sea level. Used to calculate the parameters of the atmosphere if no curves are used.
			adiabaticIndex = 1.43
			maxAltitude = 200000 // The height of the atmosphere.
			gasMassLapseRate = 2.07657256052129
			atmosphereMolarMass = 0.0022
			pressureCurveIsNormalized = False // Whether the pressure curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values.
			temperatureCurveIsNormalized = False // Whether the temperature curve should use absolute (0 - atmosphereDepth) or relative (0 - 1) values.
			temperatureLapseRate = 0.001
			temperatureSeaLevel = 200 // The static temperature at sea level. Used to calculate the parameters of the atmosphere if no curves are used.
			ambientColor = 0.0754820928,0.208955199,0.0686121732,1 // All objects inside of the atmosphere will slightly shine in this color.
			lightColor = 0.674509823,0.596078455,0.850980401,0
			addAFG = True
			pressureCurve // Assigns a pressure value to a height value inside of the atmosphere.
			{
				key = 0 5066.25 0 -0.6723968
				key = 10000 1519.875 -0.1346587 -0.1346587
				key = 29000 628.0436 -0.01449255 -0.01449255
				key = 123450 22.26 -0.001562163 -0.001562163
				key = 150000 2 -0.0001361465 -0.0001361465
				key = 170000 0.1 -1.001277E-05 -1.001277E-05
				key = 200000 0 0 0
			}
			temperatureCurve // Assigns a temperature value to a height value inside of the atmosphere.
			{
				key = 0 200 0 -0.001182922
				key = 29000 165 -0.001207278 -0.001207278
				key = 123450 120 0 0
				key = 168000 160 0.0009967944 0.0009967944
				key = 187500 175 0 0
				key = 194000 167 0 0
				key = 200000 350 0.08717471 0
			}
			temperatureSunMultCurve
			{
				key = 0 0 0 0
				key = 29000 0.5 0 0
				key = 123450 0.8 0 0
				key = 200000 1.5 0 0
			}
			temperatureLatitudeBiasCurve
			{
				key = 0 30 0 -0.0957164
				key = 50 10 -0.950278 -0.950278
				key = 70 -20 -1.955704 -1.955704
				key = 90 -40 -0.02418368 0
			}
			temperatureLatitudeSunMultCurve
			{
				key = 0 9 0 0.02746098
				key = 40 12 0.2295445 0.2295445
				key = 65 18 0 0
				key = 90 5 0 0
			}
			temperatureAxialSunBiasCurve
			{
				key = 0 0 0 0
			}
			temperatureAxialSunMultCurve
			{
				key = 0 0 0 0
			}
			temperatureEccentricityBiasCurve
			{
				key = 0 0 0 0
			}
			AtmosphereFromGround // The atmosphere effect that is seen on the horizon.
			{
				DEBUG_alwaysUpdateAll = False // Whether all parameters should get recalculated and reapplied every frame.
				doScale = True // Whether the atmosphere mesh should be scaled automatically.
				innerRadius = 5996250 // The lower bound of the atmosphere effect.
				invWaveLength = 4.83110952,7.92111492,1.90687299,0.5
				outerRadius = 6150000 // The upper bound of the atmosphere effect.
				samples = 4
				transformScale = 1.02499998,1.02499998,1.02499998 // The scale of the atmosphere mesh in all three directions. Automatically set if doScale is enabled.
				waveLength = 0.674509823,0.596078455,0.850980401,0
				outerRadiusMult = 1.025 // A multiplier that automatically sets outerRadius based on the planets radius.
				innerRadiusMult = 0.975 // A multiplier that automatically sets innerRadius based on the planets radius.
			}
		}
		@ScaledVersion
		{
			type = Atmospheric
			fadeStart = 90000
			fadeEnd = 100000
			sphericalModel = False
			deferMesh = False
			Material
			{
				color = 0.791044772,0.791044772,0.791044772,1
				specColor = 0,0,0,1
				shininess = 1
				//texture = BUILTIN/gas1_clouds
				// Jool texture by KSPsnark, Jool Biomes
				texture = AlienSpacePrograms/Jool/PluginData/JoolColor-GGS.png
				mainTexScale = 1,1
				mainTexOffset = 0,0
				normals = BUILTIN/cloud_normal
				bumpMapScale = 15,8
				bumpMapOffset = 0,0
				opacity = 1
				rimPower = 2.48
				rimBlend = 0.29
				rimColorRamp = BUILTIN/gas1_atmogradiant
				rimColorRampScale = 1,1
				rimColorRampOffset = 0,0
				resourceMapScale = 1,1
				resourceMapOffset = 0,0
			}
		}
		SpaceCenter
		{
			//PQSCity
			latitude = 0
			longitude = 0.1
			lodvisibleRangeMult = 6
			repositionToSphereSurface = true
			repositionToSphereSurfaceAddHeight = true
			repositionRadiusOffset = -20
			reorientToSphere = true  
			reorientFinalAngle = -90
			
			//MapDecal 
			decalLatitude = 0
			decalLongitude = 0
			heightMapDeformity = 80000
			absoluteOffset = 50
			absolute = true
			radius = 100000

			//Ground Materials
			groundColor = RGBA(51,88,31,55)
			groundTexture = BUILTIN/cloud_normal
		}
		@PQS
		{
			maxLevel = 13
			minLevel = 1
			deactivateAltitude = 300000
			fadeStart = 100000
			fadeEnd = 250000
			Material
			{
				saturation = 1
				contrast = 1
				steepTex = AlienSpacePrograms/Jool/PluginData/JoolTerrain.png
				steepBumpMap = BUILTIN/cloud_normal
				fogColorRamp = BUILTIN/gas1_atmogradiant
			}
			Mods
			{
				VertexHeightMap
				{
					deformity = 10500
					offset = 0
					map = AlienSpacePrograms/Jool/PluginData/JoolHeight.png
					order = 10
				}
				VertexColorMap
				{
					//map = AlienSpacePrograms/Jool/PluginData/JoolClouds.png
					// Jool color map by KSPsnark, Jool Biomes
					map = AlienSpacePrograms/Jool/PluginData/JoolColor-GGS.png
					order = 11
				}
			}
		}
	}
	@Body[Laythe]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Jool
		}
	}
	@Body[Vall]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Jool
		}
	}
	@Body[Tylo]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Jool
		}
	}
	@Body[Bop]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Jool
		}
	}
	@Body[Pol]
	{
		@Orbit
		{
			@referenceBody = AlienSpacePrograms/Jool
		}
		@Properties
		{
			%description = #aspLOC_000015 //Pol is the fifth and final known moon of Jool. It is very rarely visible due to its smallsize, and is often mistaken for a particularly buoyant sinker.
		}
	}

	//Solar panel and science balancing
	@Body[Sun]
	{
		@Properties
		{
			//High sun is easy. Low sun from Jool? That's hard.
			@ScienceValues
			{
				inSpaceLowDataValue = 12
				inSpaceHighDataValue = 2
				recoveryValue = 4
			}
		}
		@ScaledVersion
		{
			Light
			{
				//Adjust luminosity to rebalance solar panel power
				//It's probably not actually following the inverse square law; I can check later.
				luminosity = 60.01686
			}
		}
	}
}
